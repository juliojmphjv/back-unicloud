# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build and deploy Python app to Azure Web App - unicloudbr

on:
  push:
    branches:
      - main
      - development
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
      - name: Set up Environment for Development
        if: ${{ github.ref == 'refs/heads/development' }}
        run: |
          echo "ENVIRONMENT=Development" >> $GITHUB_ENV
      
      - name: Set up Environment for Production
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          echo "ENVIRONMENT=Production" >> $GITHUB_ENV
      
      # - uses: sonarsource/sonarqube-scan-action@master
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #     SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      # - uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Set up Python version
        uses: actions/setup-python@v1
        with:
          python-version: '3.8'

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
      
      - name: Install dependencies
        run: pip install -r requirements.txt
        
      # Optional: Add step to run tests here (PyTest, Django test suites, etc.)
      
      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v2
        with:
          name: python-app
          path: |
            . 
            !venv/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: ${{ env.ENVIRONMENT }}
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: python-app
          path: .
          
      - name: 'Deploy to Azure Web App Development'
        if: ${{ github.ref == 'refs/heads/development' }}
        uses: azure/webapps-deploy@v2
        id: deploy-to-webapp
        with:
          app-name: 'unicloud-back-development'
          slot-name: ${{ env.ENVIRONMENT }}
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_5B8643AF39CE4938A5C01C73A02EBD1D }}
      
      - name: 'Deploy to Azure Web App Production'
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: azure/webapps-deploy@v2
        id: deploy-to-webapp
        with:
          app-name: 'unicloudbr'
          slot-name: ${{ env.ENVIRONMENT }}
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_7165466A93794BFDBBE5DE461802CC1A }}
